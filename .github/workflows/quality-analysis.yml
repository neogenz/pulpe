name: 📊 Quality Analysis

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 8 * * 1" # Every Monday at 8 AM

jobs:
  bundle-analysis:
    name: 📦 Bundle Analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.1

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔨 Build with stats
        run: |
          cd frontend
          npm run build -- --stats-json --output-hashing none --named-chunks

      - name: 📊 Archive bundle stats
        uses: actions/upload-artifact@v4
        with:
          name: bundle-stats
          path: frontend/dist/webapp/stats.json
          retention-days: 7

  dependency-analysis:
    name: 🔍 Dependency Analysis
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.1

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Check for circular dependencies
        run: |
          cd frontend
          npm run analyze:deps:all

      - name: 📊 Upload dependency graph
        uses: actions/upload-artifact@v4
        with:
          name: dependency-graph
          path: frontend/deps/
          retention-days: 7

  lighthouse:
    name: 🔍 Lighthouse Performance
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.1

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔨 Build packages
        run: pnpm run build

      - name: 🔍 Run basic Lighthouse audit
        run: |
          cd frontend
          npm install -g lighthouse
          npm run start &
          sleep 30
          lighthouse http://localhost:4200 --output=html --output-path=./lighthouse-report.html --chrome-flags="--headless --no-sandbox"
          kill %1

      - name: 📊 Archive Lighthouse report
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: frontend/lighthouse-report.html
          retention-days: 7

  coverage-report:
    name: 📊 Coverage Report
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'
    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.1

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔨 Build shared packages
        run: pnpm run build:shared

      - name: 🧪 Run tests with coverage
        run: pnpm run test:unit

      - name: 📊 Archive coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-full-report
          path: |
            ./frontend/coverage/
            ./backend-nest/coverage/
          retention-days: 14

  weekly-quality-report:
    name: 📋 Weekly Quality Report
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.1

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔨 Build packages
        run: pnpm run build

      - name: 📊 Generate quality report
        run: |
          echo "# 📊 Weekly Quality Report" > quality-report.md
          echo "Generated on: $(date)" >> quality-report.md
          echo "" >> quality-report.md

          echo "## 📦 Bundle Sizes" >> quality-report.md
          if [ -d "frontend/dist" ]; then
            du -sh frontend/dist/* >> quality-report.md
          fi

          echo "" >> quality-report.md
          echo "## 🧪 Test Coverage" >> quality-report.md
          pnpm run test:unit --coverage --reporter=text-summary >> quality-report.md || true

          echo "" >> quality-report.md
          echo "## 🔍 Lint Issues" >> quality-report.md
          pnpm run lint 2>&1 | head -20 >> quality-report.md || true

      - name: 📊 Upload quality report
        uses: actions/upload-artifact@v4
        with:
          name: weekly-quality-report
          path: quality-report.md
          retention-days: 30
