---
description: 
globs: frontend/**
alwaysApply: false
---
UI Component Types:
- Define interfaces locally in UI components
- Create use-case specific types
- Avoid importing core entity types
- Use primitive inputs when appropriate
- Keep component APIs self-contained

Type Sharing Strategies:
- Option 1: Rework UI into pattern
- Option 2: Create dedicated model folder
- Option 3: Define types in UI standalone
- Prefer local definition for UI components
- Map between core and UI types when needed

Complex Pipe Handling:
- Extract logic into injectable service
- Create thin pipe wrapper for templates
- Treat pipe+service as pattern
- Use options-driven or template-driven APIs
- Apply content projection for flexibility
