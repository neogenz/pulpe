---
description: Apply Angular core provider pattern for centralized application configuration, router setup, and provider management when configuring app-level services and dependencies
globs: frontend/projects/webapp/src/app/core/**/*.ts
alwaysApply: false
---
Core Provider Pattern:
- Use `provideCore()` function for providers
- Centralize providers in `core/core.ts`
- Keep `app.config.ts` minimal
- Export single provider function
- Return provider array from core

Router Configuration:
- Configure router with input binding
- Enable blocking initial navigation
- Use memory scrolling restoration
- Allow same URL reload
- Pass routes through options

Provider Management:
- Add new providers to core function
- Use environment-specific providers
- Extend `CoreOptions` interface for config
- Import providers from libraries
- Organize by functionality

App Initialization:
- Use `provideAppInitializer` for startup
- Initialize APIs in provider
- Check authentication at start
- Load feature flags early
- Setup global error handling

Testing Integration:
- Mock core provider in tests
- Use test routes in TestBed
- Override providers for testing
- Configure test-specific providers
- Keep provider function testable
