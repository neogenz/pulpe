---
description: 
globs: frontend/**
alwaysApply: false
---
---
description: Apply Angular 20 component naming conventions for classes, selectors, files, and generation commands with ESLint enforcement when creating or modifying Angular components
globs: frontend/projects/webapp/src/app/**/*.ts
alwaysApply: false
---

Class Naming:
- Use `Component` suffix for classes
- Use PascalCase for class names
- Follow `HomeComponent` pattern
- Follow `MainLayoutComponent` pattern
- Enforce with ESLint rules

Selector Naming:
- Use `pulpe-` prefix for selectors
- Use kebab-case for selectors
- Follow `pulpe-home` pattern
- Follow `pulpe-main-layout` pattern
- Configure prefix in angular.json

File Naming:
- Use component name for files
- Omit `Component` suffix in filenames
- Use `.ts` extension for components
- Use `.routes.ts` for route files
- Follow `home.ts` pattern

Schematics Configuration:
- Use `inlineTemplate: true` setting
- Use `inlineStyle: true` setting
- Use `standalone: true` setting
- Use `changeDetection: OnPush` setting
- Use `flat: true` setting

Generation Commands:
- Use `ng g c feature/name/component --project=webapp`
- Use `ng g c layout/name --project=webapp`
- Use `ng g c ui/name --project=webapp`
- Generate in appropriate folders
- Follow project structure conventions

ESLint Enforcement:
- Configure `@angular-eslint/component-class-suffix` rule
- Configure `@angular-eslint/component-selector` rule
- Enforce naming conventions automatically
- Validate prefix and case rules
- Maintain consistency across project
